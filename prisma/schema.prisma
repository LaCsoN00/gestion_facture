// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String @id @default(uuid())
  name              String
  email             String @unique
  invoices          Invoice[] @relation("UserInvoices")
  categories        Category[] @relation("UserCategories")
  products          Product[] @relation("UserProducts")
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String?   @default("")
  userId      String
  user        User      @relation("UserCategories", fields: [userId], references: [id], onDelete: Cascade)
  products    Product[] @relation("CategoryProducts")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([name, userId])
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String?       @default("")
  unitPrice   Float         @default(0)
  categoryId  String?
  category    Category?     @relation("CategoryProducts", fields: [categoryId], references: [id], onDelete: SetNull)
  userId      String
  user        User          @relation("UserProducts", fields: [userId], references: [id], onDelete: Cascade)
  invoiceLines InvoiceLine[] @relation("InvoiceLineProduct")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@unique([name, userId])
}

model Invoice {
  id            String        @id @default(uuid())
  name          String
  issuerName    String        @default("")
  issuerAddress String        @default("")
  clientName    String        @default("")
  clientAddress String        @default("")
  invoiceDate   String        @default("")
  dueDate       String        @default("")
  vatActive     Boolean       @default(false)
  vatRate       Float         @default(10)
  status        Int           @default(1)
  lines         InvoiceLine[] @relation("InvoiceLines")
  userId        String
  createdById   User          @relation("UserInvoices", fields: [userId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model InvoiceLine {
  id          String   @id @default(uuid())
  description String   @default("")
  quantity    Int      @default(0)
  unitPrice   Float    @default(0)
  productId   String?
  product     Product? @relation("InvoiceLineProduct", fields: [productId], references: [id], onDelete: SetNull)
  invoiceId   String?
  invoice     Invoice? @relation("InvoiceLines", fields: [invoiceId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

